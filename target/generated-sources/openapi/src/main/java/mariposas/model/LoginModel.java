/*
 * md-user-service
 * Microsserviço responsável por gerir todas as ações relacionadas a um usuário.
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package mariposas.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.stream.Collectors;
import com.fasterxml.jackson.annotation.*;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import io.micronaut.core.annotation.Nullable;
import jakarta.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * LoginModel
 */
@Serdeable
@JsonPropertyOrder({
    LoginModel.JSON_PROPERTY_EMAIL,
    LoginModel.JSON_PROPERTY_PASSWORD
})
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public class LoginModel {

    public static final String JSON_PROPERTY_EMAIL = "email";
    public static final String JSON_PROPERTY_PASSWORD = "password";

    @Nullable(inherited = true)
    @Schema(name = "email", example = "mariaeugenia@email.com", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_EMAIL)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String email;

    @Nullable(inherited = true)
    @Schema(name = "password", example = "m4ria3ug3ni4", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PASSWORD)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String password;

    /**
     * @return the email property value
     */
    public String getEmail() {
        return email;
    }

    /**
     * Set the email property value
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Set email in a chainable fashion.
     *
     * @return The same instance of LoginModel for chaining.
     */
    public LoginModel email(String email) {
        this.email = email;
        return this;
    }

    /**
     * @return the password property value
     */
    public String getPassword() {
        return password;
    }

    /**
     * Set the password property value
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Set password in a chainable fashion.
     *
     * @return The same instance of LoginModel for chaining.
     */
    public LoginModel password(String password) {
        this.password = password;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LoginModel loginModel = (LoginModel) o;
        return Objects.equals(email, loginModel.email) &&
            Objects.equals(password, loginModel.password);
    }

    @Override
    public int hashCode() {
        return Objects.hash(email, password);
    }

    @Override
    public String toString() {
        return "LoginModel("
            + "email: " + getEmail() + ", "
            + "password: " + getPassword()
            + ")";
    }

}