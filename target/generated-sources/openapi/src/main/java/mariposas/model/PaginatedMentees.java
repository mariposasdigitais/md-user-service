/*
 * md-user-service
 * Microsserviço responsável por gerir todas as ações relacionadas a um usuário.
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package mariposas.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import mariposas.model.MenteesModel;
import com.fasterxml.jackson.annotation.*;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import io.micronaut.core.annotation.Nullable;
import jakarta.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * PaginatedMentees
 */
@Serdeable
@JsonPropertyOrder({
    PaginatedMentees.JSON_PROPERTY_DATA,
    PaginatedMentees.JSON_PROPERTY_CURRENT_PAGE,
    PaginatedMentees.JSON_PROPERTY_TOTAL_RECORDS,
    PaginatedMentees.JSON_PROPERTY_TOTAL_RECORDS_PER_PAGE
})
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public class PaginatedMentees {

    public static final String JSON_PROPERTY_DATA = "data";
    public static final String JSON_PROPERTY_CURRENT_PAGE = "currentPage";
    public static final String JSON_PROPERTY_TOTAL_RECORDS = "totalRecords";
    public static final String JSON_PROPERTY_TOTAL_RECORDS_PER_PAGE = "totalRecordsPerPage";

    @Nullable(inherited = true)
    @Schema(name = "data", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private List<@Valid MenteesModel> data;

    @Nullable(inherited = true)
    @Schema(name = "currentPage", example = "1", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CURRENT_PAGE)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private Integer currentPage;

    @Nullable(inherited = true)
    @Schema(name = "totalRecords", example = "1", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TOTAL_RECORDS)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private Integer totalRecords;

    @Nullable(inherited = true)
    @Schema(name = "totalRecordsPerPage", example = "2", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TOTAL_RECORDS_PER_PAGE)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private Integer totalRecordsPerPage;

    /**
     * @return the data property value
     */
    public List<@Valid MenteesModel> getData() {
        return data;
    }

    /**
     * Set the data property value
     */
    public void setData(List<@Valid MenteesModel> data) {
        this.data = data;
    }

    /**
     * Set data in a chainable fashion.
     *
     * @return The same instance of PaginatedMentees for chaining.
     */
    public PaginatedMentees data(List<@Valid MenteesModel> data) {
        this.data = data;
        return this;
    }
    /**
     * Add an item to the data property in a chainable fashion.
     *
     * @return The same instance of PaginatedMentees for chaining.
     */
    public PaginatedMentees addDataItem(MenteesModel dataItem) {
        if (data == null) {
            data = new ArrayList<>();
        }
        data.add(dataItem);
        return this;
    }

    /**
     * @return the currentPage property value
     */
    public Integer getCurrentPage() {
        return currentPage;
    }

    /**
     * Set the currentPage property value
     */
    public void setCurrentPage(Integer currentPage) {
        this.currentPage = currentPage;
    }

    /**
     * Set currentPage in a chainable fashion.
     *
     * @return The same instance of PaginatedMentees for chaining.
     */
    public PaginatedMentees currentPage(Integer currentPage) {
        this.currentPage = currentPage;
        return this;
    }

    /**
     * @return the totalRecords property value
     */
    public Integer getTotalRecords() {
        return totalRecords;
    }

    /**
     * Set the totalRecords property value
     */
    public void setTotalRecords(Integer totalRecords) {
        this.totalRecords = totalRecords;
    }

    /**
     * Set totalRecords in a chainable fashion.
     *
     * @return The same instance of PaginatedMentees for chaining.
     */
    public PaginatedMentees totalRecords(Integer totalRecords) {
        this.totalRecords = totalRecords;
        return this;
    }

    /**
     * @return the totalRecordsPerPage property value
     */
    public Integer getTotalRecordsPerPage() {
        return totalRecordsPerPage;
    }

    /**
     * Set the totalRecordsPerPage property value
     */
    public void setTotalRecordsPerPage(Integer totalRecordsPerPage) {
        this.totalRecordsPerPage = totalRecordsPerPage;
    }

    /**
     * Set totalRecordsPerPage in a chainable fashion.
     *
     * @return The same instance of PaginatedMentees for chaining.
     */
    public PaginatedMentees totalRecordsPerPage(Integer totalRecordsPerPage) {
        this.totalRecordsPerPage = totalRecordsPerPage;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaginatedMentees paginatedMentees = (PaginatedMentees) o;
        return Objects.equals(data, paginatedMentees.data) &&
            Objects.equals(currentPage, paginatedMentees.currentPage) &&
            Objects.equals(totalRecords, paginatedMentees.totalRecords) &&
            Objects.equals(totalRecordsPerPage, paginatedMentees.totalRecordsPerPage);
    }

    @Override
    public int hashCode() {
        return Objects.hash(data, currentPage, totalRecords, totalRecordsPerPage);
    }

    @Override
    public String toString() {
        return "PaginatedMentees("
            + "data: " + getData() + ", "
            + "currentPage: " + getCurrentPage() + ", "
            + "totalRecords: " + getTotalRecords() + ", "
            + "totalRecordsPerPage: " + getTotalRecordsPerPage()
            + ")";
    }

}